{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "abab4488-a241-489a-8673-923aa55cf46e",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b99c504f-fcd9-4aeb-8bb5-3406313fde29",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"C:\\Users\\Lalith kumar\\Downloads\\climate_data.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7892b4a0-33fd-414b-b3a7-4387b3acb74a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3902 entries, 0 to 3901\n",
      "Data columns (total 23 columns):\n",
      " #   Column                    Non-Null Count  Dtype  \n",
      "---  ------                    --------------  -----  \n",
      " 0   Date                      3902 non-null   object \n",
      " 1   Average temperature (°F)  3902 non-null   float64\n",
      " 2   Average humidity (%)      3902 non-null   float64\n",
      " 3   Average dewpoint (°F)     3902 non-null   float64\n",
      " 4   Average barometer (in)    3902 non-null   float64\n",
      " 5   Average windspeed (mph)   3902 non-null   float64\n",
      " 6   Average gustspeed (mph)   3902 non-null   float64\n",
      " 7   Average direction (°deg)  3902 non-null   float64\n",
      " 8   Rainfall for month (in)   3902 non-null   float64\n",
      " 9   Rainfall for year (in)    3902 non-null   float64\n",
      " 10  Maximum rain per minute   3902 non-null   float64\n",
      " 11  Maximum temperature (°F)  3902 non-null   float64\n",
      " 12  Minimum temperature (°F)  3902 non-null   float64\n",
      " 13  Maximum humidity (%)      3902 non-null   float64\n",
      " 14  Minimum humidity (%)      3902 non-null   float64\n",
      " 15  Maximum pressure          3902 non-null   float64\n",
      " 16  Minimum pressure          3902 non-null   float64\n",
      " 17  Maximum windspeed (mph)   3902 non-null   float64\n",
      " 18  Maximum gust speed (mph)  3902 non-null   float64\n",
      " 19  Maximum heat index (°F)   3902 non-null   float64\n",
      " 20  Date1                     3902 non-null   object \n",
      " 21  Month                     3902 non-null   int64  \n",
      " 22  diff_pressure             3902 non-null   float64\n",
      "dtypes: float64(20), int64(1), object(2)\n",
      "memory usage: 701.3+ KB\n"
     ]
    }
   ],
   "source": [
    "\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8f754b9d-4ba7-4833-9fc6-cb21e36fea4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Average temperature (°F)</th>\n",
       "      <th>Average humidity (%)</th>\n",
       "      <th>Average dewpoint (°F)</th>\n",
       "      <th>Average barometer (in)</th>\n",
       "      <th>Average windspeed (mph)</th>\n",
       "      <th>Average gustspeed (mph)</th>\n",
       "      <th>Average direction (°deg)</th>\n",
       "      <th>Rainfall for month (in)</th>\n",
       "      <th>Rainfall for year (in)</th>\n",
       "      <th>...</th>\n",
       "      <th>Maximum humidity (%)</th>\n",
       "      <th>Minimum humidity (%)</th>\n",
       "      <th>Maximum pressure</th>\n",
       "      <th>Minimum pressure</th>\n",
       "      <th>Maximum windspeed (mph)</th>\n",
       "      <th>Maximum gust speed (mph)</th>\n",
       "      <th>Maximum heat index (°F)</th>\n",
       "      <th>Date1</th>\n",
       "      <th>Month</th>\n",
       "      <th>diff_pressure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2009-01-01</td>\n",
       "      <td>37.8</td>\n",
       "      <td>35.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>29.7</td>\n",
       "      <td>26.4</td>\n",
       "      <td>36.8</td>\n",
       "      <td>274.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.762</td>\n",
       "      <td>29.596</td>\n",
       "      <td>41.4</td>\n",
       "      <td>59.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>2009-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2009-01-02</td>\n",
       "      <td>43.2</td>\n",
       "      <td>32.0</td>\n",
       "      <td>14.7</td>\n",
       "      <td>29.5</td>\n",
       "      <td>12.8</td>\n",
       "      <td>18.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>29.669</td>\n",
       "      <td>29.268</td>\n",
       "      <td>35.7</td>\n",
       "      <td>51.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>2009-01-02</td>\n",
       "      <td>1</td>\n",
       "      <td>0.401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2009-01-03</td>\n",
       "      <td>25.7</td>\n",
       "      <td>60.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>29.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>290.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>30.232</td>\n",
       "      <td>29.260</td>\n",
       "      <td>25.3</td>\n",
       "      <td>38.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>2009-01-03</td>\n",
       "      <td>1</td>\n",
       "      <td>0.972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2009-01-04</td>\n",
       "      <td>9.3</td>\n",
       "      <td>67.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.9</td>\n",
       "      <td>4.5</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>30.566</td>\n",
       "      <td>30.227</td>\n",
       "      <td>12.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>2009-01-04</td>\n",
       "      <td>1</td>\n",
       "      <td>0.339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2009-01-05</td>\n",
       "      <td>23.5</td>\n",
       "      <td>30.0</td>\n",
       "      <td>-5.3</td>\n",
       "      <td>29.9</td>\n",
       "      <td>16.7</td>\n",
       "      <td>23.1</td>\n",
       "      <td>265.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>30.233</td>\n",
       "      <td>29.568</td>\n",
       "      <td>38.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>2009-01-05</td>\n",
       "      <td>1</td>\n",
       "      <td>0.665</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date  Average temperature (°F)  Average humidity (%)  \\\n",
       "0  2009-01-01                      37.8                  35.0   \n",
       "1  2009-01-02                      43.2                  32.0   \n",
       "2  2009-01-03                      25.7                  60.0   \n",
       "3  2009-01-04                       9.3                  67.0   \n",
       "4  2009-01-05                      23.5                  30.0   \n",
       "\n",
       "   Average dewpoint (°F)  Average barometer (in)  Average windspeed (mph)  \\\n",
       "0                   12.7                    29.7                     26.4   \n",
       "1                   14.7                    29.5                     12.8   \n",
       "2                   12.7                    29.7                      8.3   \n",
       "3                    0.1                    30.4                      2.9   \n",
       "4                   -5.3                    29.9                     16.7   \n",
       "\n",
       "   Average gustspeed (mph)  Average direction (°deg)  Rainfall for month (in)  \\\n",
       "0                     36.8                     274.0                      0.0   \n",
       "1                     18.0                     240.0                      0.0   \n",
       "2                     12.2                     290.0                      0.0   \n",
       "3                      4.5                      47.0                      0.0   \n",
       "4                     23.1                     265.0                      0.0   \n",
       "\n",
       "   Rainfall for year (in)  ...  Maximum humidity (%)  Minimum humidity (%)  \\\n",
       "0                     0.0  ...                   4.0                  27.0   \n",
       "1                     0.0  ...                   4.0                  16.0   \n",
       "2                     0.0  ...                   8.0                  35.0   \n",
       "3                     0.0  ...                   7.0                  35.0   \n",
       "4                     0.0  ...                   5.0                  13.0   \n",
       "\n",
       "   Maximum pressure  Minimum pressure  Maximum windspeed (mph)  \\\n",
       "0            29.762            29.596                     41.4   \n",
       "1            29.669            29.268                     35.7   \n",
       "2            30.232            29.260                     25.3   \n",
       "3            30.566            30.227                     12.7   \n",
       "4            30.233            29.568                     38.0   \n",
       "\n",
       "   Maximum gust speed (mph)  Maximum heat index (°F)       Date1  Month  \\\n",
       "0                      59.0                     40.0  2009-01-01      1   \n",
       "1                      51.0                     52.0  2009-01-02      1   \n",
       "2                      38.0                     41.0  2009-01-03      1   \n",
       "3                      20.0                     32.0  2009-01-04      1   \n",
       "4                      53.0                     32.0  2009-01-05      1   \n",
       "\n",
       "   diff_pressure  \n",
       "0          0.166  \n",
       "1          0.401  \n",
       "2          0.972  \n",
       "3          0.339  \n",
       "4          0.665  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "943247e3-600e-40e0-b675-9afcc51eba07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Average temperature (°F)</th>\n",
       "      <th>Average humidity (%)</th>\n",
       "      <th>Average dewpoint (°F)</th>\n",
       "      <th>Average barometer (in)</th>\n",
       "      <th>Average windspeed (mph)</th>\n",
       "      <th>Average gustspeed (mph)</th>\n",
       "      <th>Average direction (°deg)</th>\n",
       "      <th>Rainfall for month (in)</th>\n",
       "      <th>Rainfall for year (in)</th>\n",
       "      <th>...</th>\n",
       "      <th>Maximum humidity (%)</th>\n",
       "      <th>Minimum humidity (%)</th>\n",
       "      <th>Maximum pressure</th>\n",
       "      <th>Minimum pressure</th>\n",
       "      <th>Maximum windspeed (mph)</th>\n",
       "      <th>Maximum gust speed (mph)</th>\n",
       "      <th>Maximum heat index (°F)</th>\n",
       "      <th>Date1</th>\n",
       "      <th>Month</th>\n",
       "      <th>diff_pressure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3897</th>\n",
       "      <td>2020-07-24</td>\n",
       "      <td>64.1</td>\n",
       "      <td>62.0</td>\n",
       "      <td>49.8</td>\n",
       "      <td>29.6</td>\n",
       "      <td>3.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>240.0</td>\n",
       "      <td>0.24</td>\n",
       "      <td>4.38</td>\n",
       "      <td>...</td>\n",
       "      <td>86.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>29.686</td>\n",
       "      <td>29.577</td>\n",
       "      <td>15.0</td>\n",
       "      <td>25.3</td>\n",
       "      <td>77.4</td>\n",
       "      <td>2020-07-24</td>\n",
       "      <td>7</td>\n",
       "      <td>0.109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3898</th>\n",
       "      <td>2020-07-25</td>\n",
       "      <td>62.8</td>\n",
       "      <td>60.0</td>\n",
       "      <td>48.1</td>\n",
       "      <td>29.7</td>\n",
       "      <td>2.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>242.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>4.47</td>\n",
       "      <td>...</td>\n",
       "      <td>90.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>29.781</td>\n",
       "      <td>29.645</td>\n",
       "      <td>8.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>77.5</td>\n",
       "      <td>2020-07-25</td>\n",
       "      <td>7</td>\n",
       "      <td>0.136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3899</th>\n",
       "      <td>2020-07-26</td>\n",
       "      <td>60.6</td>\n",
       "      <td>68.0</td>\n",
       "      <td>48.9</td>\n",
       "      <td>29.8</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.9</td>\n",
       "      <td>357.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>4.47</td>\n",
       "      <td>...</td>\n",
       "      <td>90.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>29.930</td>\n",
       "      <td>29.745</td>\n",
       "      <td>11.5</td>\n",
       "      <td>15.0</td>\n",
       "      <td>77.5</td>\n",
       "      <td>2020-07-26</td>\n",
       "      <td>7</td>\n",
       "      <td>0.185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3900</th>\n",
       "      <td>2020-07-27</td>\n",
       "      <td>61.7</td>\n",
       "      <td>64.0</td>\n",
       "      <td>47.4</td>\n",
       "      <td>29.9</td>\n",
       "      <td>2.2</td>\n",
       "      <td>4.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>4.47</td>\n",
       "      <td>...</td>\n",
       "      <td>96.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>29.941</td>\n",
       "      <td>29.781</td>\n",
       "      <td>13.8</td>\n",
       "      <td>18.4</td>\n",
       "      <td>78.2</td>\n",
       "      <td>2020-07-27</td>\n",
       "      <td>7</td>\n",
       "      <td>0.160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3901</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>60.5</td>\n",
       "      <td>61.0</td>\n",
       "      <td>45.3</td>\n",
       "      <td>29.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>248.0</td>\n",
       "      <td>0.35</td>\n",
       "      <td>4.49</td>\n",
       "      <td>...</td>\n",
       "      <td>94.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>29.792</td>\n",
       "      <td>29.675</td>\n",
       "      <td>17.3</td>\n",
       "      <td>26.5</td>\n",
       "      <td>77.6</td>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>7</td>\n",
       "      <td>0.117</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date  Average temperature (°F)  Average humidity (%)  \\\n",
       "3897  2020-07-24                      64.1                  62.0   \n",
       "3898  2020-07-25                      62.8                  60.0   \n",
       "3899  2020-07-26                      60.6                  68.0   \n",
       "3900  2020-07-27                      61.7                  64.0   \n",
       "3901  2020-07-28                      60.5                  61.0   \n",
       "\n",
       "      Average dewpoint (°F)  Average barometer (in)  Average windspeed (mph)  \\\n",
       "3897                   49.8                    29.6                      3.6   \n",
       "3898                   48.1                    29.7                      2.5   \n",
       "3899                   48.9                    29.8                      1.7   \n",
       "3900                   47.4                    29.9                      2.2   \n",
       "3901                   45.3                    29.7                      4.0   \n",
       "\n",
       "      Average gustspeed (mph)  Average direction (°deg)  \\\n",
       "3897                      5.8                     240.0   \n",
       "3898                      4.0                     242.0   \n",
       "3899                      2.9                     357.0   \n",
       "3900                      4.0                      66.0   \n",
       "3901                      6.2                     248.0   \n",
       "\n",
       "      Rainfall for month (in)  Rainfall for year (in)  ...  \\\n",
       "3897                     0.24                    4.38  ...   \n",
       "3898                     0.33                    4.47  ...   \n",
       "3899                     0.33                    4.47  ...   \n",
       "3900                     0.33                    4.47  ...   \n",
       "3901                     0.35                    4.49  ...   \n",
       "\n",
       "      Maximum humidity (%)  Minimum humidity (%)  Maximum pressure  \\\n",
       "3897                  86.0                  35.0            29.686   \n",
       "3898                  90.0                  36.0            29.781   \n",
       "3899                  90.0                  40.0            29.930   \n",
       "3900                  96.0                  35.0            29.941   \n",
       "3901                  94.0                  35.0            29.792   \n",
       "\n",
       "      Minimum pressure  Maximum windspeed (mph)  Maximum gust speed (mph)  \\\n",
       "3897            29.577                     15.0                      25.3   \n",
       "3898            29.645                      8.1                      17.3   \n",
       "3899            29.745                     11.5                      15.0   \n",
       "3900            29.781                     13.8                      18.4   \n",
       "3901            29.675                     17.3                      26.5   \n",
       "\n",
       "      Maximum heat index (°F)       Date1  Month  diff_pressure  \n",
       "3897                     77.4  2020-07-24      7          0.109  \n",
       "3898                     77.5  2020-07-25      7          0.136  \n",
       "3899                     77.5  2020-07-26      7          0.185  \n",
       "3900                     78.2  2020-07-27      7          0.160  \n",
       "3901                     77.6  2020-07-28      7          0.117  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c2638a1a-7bd7-4694-b45d-beb89b2d07ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date                         object\n",
       "Average temperature (°F)    float64\n",
       "Average humidity (%)        float64\n",
       "Average dewpoint (°F)       float64\n",
       "Average barometer (in)      float64\n",
       "Average windspeed (mph)     float64\n",
       "Average gustspeed (mph)     float64\n",
       "Average direction (°deg)    float64\n",
       "Rainfall for month (in)     float64\n",
       "Rainfall for year (in)      float64\n",
       "Maximum rain per minute     float64\n",
       "Maximum temperature (°F)    float64\n",
       "Minimum temperature (°F)    float64\n",
       "Maximum humidity (%)        float64\n",
       "Minimum humidity (%)        float64\n",
       "Maximum pressure            float64\n",
       "Minimum pressure            float64\n",
       "Maximum windspeed (mph)     float64\n",
       "Maximum gust speed (mph)    float64\n",
       "Maximum heat index (°F)     float64\n",
       "Date1                        object\n",
       "Month                         int64\n",
       "diff_pressure               float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2a31d5af-4b4c-42c7-b077-38e83bca9d38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Average temperature (°F)</th>\n",
       "      <th>Average humidity (%)</th>\n",
       "      <th>Average dewpoint (°F)</th>\n",
       "      <th>Average barometer (in)</th>\n",
       "      <th>Average windspeed (mph)</th>\n",
       "      <th>Average gustspeed (mph)</th>\n",
       "      <th>Average direction (°deg)</th>\n",
       "      <th>Rainfall for month (in)</th>\n",
       "      <th>Rainfall for year (in)</th>\n",
       "      <th>Maximum rain per minute</th>\n",
       "      <th>...</th>\n",
       "      <th>Minimum temperature (°F)</th>\n",
       "      <th>Maximum humidity (%)</th>\n",
       "      <th>Minimum humidity (%)</th>\n",
       "      <th>Maximum pressure</th>\n",
       "      <th>Minimum pressure</th>\n",
       "      <th>Maximum windspeed (mph)</th>\n",
       "      <th>Maximum gust speed (mph)</th>\n",
       "      <th>Maximum heat index (°F)</th>\n",
       "      <th>Month</th>\n",
       "      <th>diff_pressure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "      <td>3902.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>44.670733</td>\n",
       "      <td>48.878011</td>\n",
       "      <td>23.127037</td>\n",
       "      <td>29.881420</td>\n",
       "      <td>5.758893</td>\n",
       "      <td>10.011968</td>\n",
       "      <td>216.037417</td>\n",
       "      <td>0.451105</td>\n",
       "      <td>5.486171</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>31.227524</td>\n",
       "      <td>73.673757</td>\n",
       "      <td>26.016914</td>\n",
       "      <td>30.045451</td>\n",
       "      <td>29.701622</td>\n",
       "      <td>19.840748</td>\n",
       "      <td>33.974910</td>\n",
       "      <td>58.086315</td>\n",
       "      <td>6.395695</td>\n",
       "      <td>0.343829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>15.326793</td>\n",
       "      <td>17.438153</td>\n",
       "      <td>14.634088</td>\n",
       "      <td>0.250395</td>\n",
       "      <td>4.022485</td>\n",
       "      <td>14.117446</td>\n",
       "      <td>97.677761</td>\n",
       "      <td>0.603462</td>\n",
       "      <td>4.534444</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>14.124424</td>\n",
       "      <td>20.380611</td>\n",
       "      <td>15.623870</td>\n",
       "      <td>0.258140</td>\n",
       "      <td>0.451691</td>\n",
       "      <td>12.235410</td>\n",
       "      <td>38.632424</td>\n",
       "      <td>17.953453</td>\n",
       "      <td>3.430231</td>\n",
       "      <td>0.407499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-12.100000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>-22.200000</td>\n",
       "      <td>28.200000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>-27.700000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>29.338000</td>\n",
       "      <td>13.266000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-6.100000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>33.700000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>12.100000</td>\n",
       "      <td>29.700000</td>\n",
       "      <td>2.700000</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>116.000000</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.980000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>29.866000</td>\n",
       "      <td>29.562000</td>\n",
       "      <td>13.800000</td>\n",
       "      <td>19.600000</td>\n",
       "      <td>43.900000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.220000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>45.100000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>22.500000</td>\n",
       "      <td>29.900000</td>\n",
       "      <td>4.600000</td>\n",
       "      <td>7.100000</td>\n",
       "      <td>253.000000</td>\n",
       "      <td>0.220000</td>\n",
       "      <td>5.080000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>32.800000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>30.016000</td>\n",
       "      <td>29.711000</td>\n",
       "      <td>18.400000</td>\n",
       "      <td>27.600000</td>\n",
       "      <td>57.200000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.293000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>35.400000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>12.100000</td>\n",
       "      <td>282.000000</td>\n",
       "      <td>0.670000</td>\n",
       "      <td>9.047500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>41.800000</td>\n",
       "      <td>89.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>30.203000</td>\n",
       "      <td>29.869000</td>\n",
       "      <td>24.200000</td>\n",
       "      <td>34.500000</td>\n",
       "      <td>77.300000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>0.395000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>76.300000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>55.100000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>26.400000</td>\n",
       "      <td>240.400000</td>\n",
       "      <td>360.000000</td>\n",
       "      <td>4.480000</td>\n",
       "      <td>16.410000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>65.700000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>31.204000</td>\n",
       "      <td>30.855000</td>\n",
       "      <td>181.700000</td>\n",
       "      <td>255.300000</td>\n",
       "      <td>88.400000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>16.602000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Average temperature (°F)  Average humidity (%)  Average dewpoint (°F)  \\\n",
       "count               3902.000000           3902.000000            3902.000000   \n",
       "mean                  44.670733             48.878011              23.127037   \n",
       "std                   15.326793             17.438153              14.634088   \n",
       "min                  -12.100000              9.000000             -22.200000   \n",
       "25%                   33.700000             36.000000              12.100000   \n",
       "50%                   45.100000             47.000000              22.500000   \n",
       "75%                   58.000000             61.000000              35.400000   \n",
       "max                   76.300000             94.000000              55.100000   \n",
       "\n",
       "       Average barometer (in)  Average windspeed (mph)  \\\n",
       "count             3902.000000              3902.000000   \n",
       "mean                29.881420                 5.758893   \n",
       "std                  0.250395                 4.022485   \n",
       "min                 28.200000                 0.000000   \n",
       "25%                 29.700000                 2.700000   \n",
       "50%                 29.900000                 4.600000   \n",
       "75%                 30.000000                 8.000000   \n",
       "max                 31.000000                26.400000   \n",
       "\n",
       "       Average gustspeed (mph)  Average direction (°deg)  \\\n",
       "count              3902.000000               3902.000000   \n",
       "mean                 10.011968                216.037417   \n",
       "std                  14.117446                 97.677761   \n",
       "min                   0.000000                  0.000000   \n",
       "25%                   4.500000                116.000000   \n",
       "50%                   7.100000                253.000000   \n",
       "75%                  12.100000                282.000000   \n",
       "max                 240.400000                360.000000   \n",
       "\n",
       "       Rainfall for month (in)  Rainfall for year (in)  \\\n",
       "count              3902.000000             3902.000000   \n",
       "mean                  0.451105                5.486171   \n",
       "std                   0.603462                4.534444   \n",
       "min                   0.000000                0.000000   \n",
       "25%                   0.050000                0.980000   \n",
       "50%                   0.220000                5.080000   \n",
       "75%                   0.670000                9.047500   \n",
       "max                   4.480000               16.410000   \n",
       "\n",
       "       Maximum rain per minute  ...  Minimum temperature (°F)  \\\n",
       "count                   3902.0  ...               3902.000000   \n",
       "mean                       0.0  ...                 31.227524   \n",
       "std                        0.0  ...                 14.124424   \n",
       "min                        0.0  ...                -27.700000   \n",
       "25%                        0.0  ...                 23.000000   \n",
       "50%                        0.0  ...                 32.800000   \n",
       "75%                        0.0  ...                 41.800000   \n",
       "max                        0.0  ...                 65.700000   \n",
       "\n",
       "       Maximum humidity (%)  Minimum humidity (%)  Maximum pressure  \\\n",
       "count           3902.000000           3902.000000       3902.000000   \n",
       "mean              73.673757             26.016914         30.045451   \n",
       "std               20.380611             15.623870          0.258140   \n",
       "min                1.000000              0.000000         29.338000   \n",
       "25%               63.000000             15.000000         29.866000   \n",
       "50%               81.000000             22.000000         30.016000   \n",
       "75%               89.000000             32.000000         30.203000   \n",
       "max              100.000000             90.000000         31.204000   \n",
       "\n",
       "       Minimum pressure  Maximum windspeed (mph)  Maximum gust speed (mph)  \\\n",
       "count       3902.000000              3902.000000               3902.000000   \n",
       "mean          29.701622                19.840748                 33.974910   \n",
       "std            0.451691                12.235410                 38.632424   \n",
       "min           13.266000                 0.000000                  0.000000   \n",
       "25%           29.562000                13.800000                 19.600000   \n",
       "50%           29.711000                18.400000                 27.600000   \n",
       "75%           29.869000                24.200000                 34.500000   \n",
       "max           30.855000               181.700000                255.300000   \n",
       "\n",
       "       Maximum heat index (°F)        Month  diff_pressure  \n",
       "count              3902.000000  3902.000000    3902.000000  \n",
       "mean                 58.086315     6.395695       0.343829  \n",
       "std                  17.953453     3.430231       0.407499  \n",
       "min                  -6.100000     1.000000       0.000000  \n",
       "25%                  43.900000     3.000000       0.220000  \n",
       "50%                  57.200000     6.000000       0.293000  \n",
       "75%                  77.300000     9.000000       0.395000  \n",
       "max                  88.400000    12.000000      16.602000  \n",
       "\n",
       "[8 rows x 21 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7e317884-0b0d-4f20-aeee-fe3bb84d9a76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       37.8\n",
       "1       43.2\n",
       "2       25.7\n",
       "3        9.3\n",
       "4       23.5\n",
       "        ... \n",
       "3897    64.1\n",
       "3898    62.8\n",
       "3899    60.6\n",
       "3900    61.7\n",
       "3901    60.5\n",
       "Name: Average temperature (°F), Length: 3902, dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Average temperature (°F)']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bbe09759-6b43-4cc1-8623-390068f3040a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       35.0\n",
       "1       32.0\n",
       "2       60.0\n",
       "3       67.0\n",
       "4       30.0\n",
       "        ... \n",
       "3897    62.0\n",
       "3898    60.0\n",
       "3899    68.0\n",
       "3900    64.0\n",
       "3901    61.0\n",
       "Name: Average humidity (%), Length: 3902, dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Average humidity (%)']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dffcd9b2-747a-4e74-b004-37cca8dd4eb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3902, 23)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "285daf5d-e502-405d-83c4-d5600a475316",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Distribution of View Count'}, ylabel='Frequency'>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "df['Average humidity (%)'].plot(kind='hist', bins=50,\n",
    "                     title='Distribution of View Count',\n",
    "                     figsize=(15, 5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4f8c69e3-6e8d-48a6-a75d-e6659bcf4452",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'CLIMATE'}, xlabel='Average windspeed (mph)', ylabel='Average temperature (°F)'>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.plot(kind='scatter',x='Average windspeed (mph)',y='Average temperature (°F)',title='CLIMATE')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "22d66ae7-f41a-4139-aa79-8805f2c32bdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date                        0\n",
       "Average temperature (°F)    0\n",
       "Average humidity (%)        0\n",
       "Average dewpoint (°F)       0\n",
       "Average barometer (in)      0\n",
       "Average windspeed (mph)     0\n",
       "Average gustspeed (mph)     0\n",
       "Average direction (°deg)    0\n",
       "Rainfall for month (in)     0\n",
       "Rainfall for year (in)      0\n",
       "Maximum rain per minute     0\n",
       "Maximum temperature (°F)    0\n",
       "Minimum temperature (°F)    0\n",
       "Maximum humidity (%)        0\n",
       "Minimum humidity (%)        0\n",
       "Maximum pressure            0\n",
       "Minimum pressure            0\n",
       "Maximum windspeed (mph)     0\n",
       "Maximum gust speed (mph)    0\n",
       "Maximum heat index (°F)     0\n",
       "Date1                       0\n",
       "Month                       0\n",
       "diff_pressure               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "fe89c2e3-e6b2-4428-b2db-148135621184",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Average temperature (°F)</th>\n",
       "      <th>Average humidity (%)</th>\n",
       "      <th>Average dewpoint (°F)</th>\n",
       "      <th>Average barometer (in)</th>\n",
       "      <th>Average windspeed (mph)</th>\n",
       "      <th>Average gustspeed (mph)</th>\n",
       "      <th>Average direction (°deg)</th>\n",
       "      <th>Rainfall for month (in)</th>\n",
       "      <th>Rainfall for year (in)</th>\n",
       "      <th>Maximum rain per minute</th>\n",
       "      <th>...</th>\n",
       "      <th>Date1_2020-07-19</th>\n",
       "      <th>Date1_2020-07-20</th>\n",
       "      <th>Date1_2020-07-21</th>\n",
       "      <th>Date1_2020-07-22</th>\n",
       "      <th>Date1_2020-07-23</th>\n",
       "      <th>Date1_2020-07-24</th>\n",
       "      <th>Date1_2020-07-25</th>\n",
       "      <th>Date1_2020-07-26</th>\n",
       "      <th>Date1_2020-07-27</th>\n",
       "      <th>Date1_2020-07-28</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>37.8</td>\n",
       "      <td>35.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>29.7</td>\n",
       "      <td>26.4</td>\n",
       "      <td>36.8</td>\n",
       "      <td>274.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>43.2</td>\n",
       "      <td>32.0</td>\n",
       "      <td>14.7</td>\n",
       "      <td>29.5</td>\n",
       "      <td>12.8</td>\n",
       "      <td>18.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25.7</td>\n",
       "      <td>60.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>29.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>290.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9.3</td>\n",
       "      <td>67.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.9</td>\n",
       "      <td>4.5</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23.5</td>\n",
       "      <td>30.0</td>\n",
       "      <td>-5.3</td>\n",
       "      <td>29.9</td>\n",
       "      <td>16.7</td>\n",
       "      <td>23.1</td>\n",
       "      <td>265.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 7825 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Average temperature (°F)  Average humidity (%)  Average dewpoint (°F)  \\\n",
       "0                      37.8                  35.0                   12.7   \n",
       "1                      43.2                  32.0                   14.7   \n",
       "2                      25.7                  60.0                   12.7   \n",
       "3                       9.3                  67.0                    0.1   \n",
       "4                      23.5                  30.0                   -5.3   \n",
       "\n",
       "   Average barometer (in)  Average windspeed (mph)  Average gustspeed (mph)  \\\n",
       "0                    29.7                     26.4                     36.8   \n",
       "1                    29.5                     12.8                     18.0   \n",
       "2                    29.7                      8.3                     12.2   \n",
       "3                    30.4                      2.9                      4.5   \n",
       "4                    29.9                     16.7                     23.1   \n",
       "\n",
       "   Average direction (°deg)  Rainfall for month (in)  Rainfall for year (in)  \\\n",
       "0                     274.0                      0.0                     0.0   \n",
       "1                     240.0                      0.0                     0.0   \n",
       "2                     290.0                      0.0                     0.0   \n",
       "3                      47.0                      0.0                     0.0   \n",
       "4                     265.0                      0.0                     0.0   \n",
       "\n",
       "   Maximum rain per minute  ...  Date1_2020-07-19  Date1_2020-07-20  \\\n",
       "0                      0.0  ...             False             False   \n",
       "1                      0.0  ...             False             False   \n",
       "2                      0.0  ...             False             False   \n",
       "3                      0.0  ...             False             False   \n",
       "4                      0.0  ...             False             False   \n",
       "\n",
       "   Date1_2020-07-21  Date1_2020-07-22  Date1_2020-07-23  Date1_2020-07-24  \\\n",
       "0             False             False             False             False   \n",
       "1             False             False             False             False   \n",
       "2             False             False             False             False   \n",
       "3             False             False             False             False   \n",
       "4             False             False             False             False   \n",
       "\n",
       "   Date1_2020-07-25  Date1_2020-07-26  Date1_2020-07-27  Date1_2020-07-28  \n",
       "0             False             False             False             False  \n",
       "1             False             False             False             False  \n",
       "2             False             False             False             False  \n",
       "3             False             False             False             False  \n",
       "4             False             False             False             False  \n",
       "\n",
       "[5 rows x 7825 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.get_dummies(df)\n",
    "df.head(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "72c10ffd-51eb-45a6-bc95-7c5b8215bd5f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ae63b8aa-ec95-46c4-99dd-084b4fde448e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
